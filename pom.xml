<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>quant.tipl</groupId>
    <artifactId>quant-tipl</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>SIPL Parent</name>
    <url>http://www.4quant.com/</url>

    <scm>
        <connection>scm:git:git@bitbucket.org/skicavs/tipl.git</connection>
        <developerConnection>scm:git:https://skicavs@bitbucket.org/skicavs/tipl.git</developerConnection>
        <url>scm:git:skicavs@bitbucket.org/skicavs/tipl.git</url>
        <tag>maven</tag>
    </scm>
    <developers>
        <developer>
            <id>skicavs</id>
            <name>Kevin Mader</name>
            <email>kevinmader@gmail.com</email>
            <url>kmader.github.io</url>
            <organization>4Quant</organization>
            <organizationUrl>http://www.4quant.com</organizationUrl>
        </developer>
    </developers>
    <issueManagement>
        <system>Bitbucket</system>
        <url>https://bitbucket.org/skicavs/tipl/issues</url>
    </issueManagement>

    <prerequisites>
        <maven>3.0.4</maven>
    </prerequisites>

    <modules>
        <module>core</module>
        <module>file-io</module>
        <module>ccgeom</module>
        <module>spark-scifio</module>
        <module>spark-ij</module>
        <module>spark-imageio</module>
        <module>spark</module>
        <module>workflows</module>
        <module>volviewer</module>
        <module>integration</module>
        <module>webgui</module>
        <module>examples</module>
    </modules>
    <properties>
        <scala.major>2.10</scala.major>
        <scala.compile.version>2.10.4</scala.compile.version>
        <scala.version>2.10.4</scala.version>
        <scala.binary.version>2.10</scala.binary.version>
        <scala.macros.version>2.0.1</scala.macros.version>

        <java.version>1.7</java.version>

        <spark.version>1.3.1</spark.version>
        <ij.version>1.49j</ij.version>
        <knime.version>2.11</knime.version>
        <javadoc.skip>false</javadoc.skip>

        <java.memory.min>-Xms1G</java.memory.min>
        <java.memory.max>-Xmx2G</java.memory.max>

        <PermGen>256m</PermGen>
        <MaxPermGen>1024m</MaxPermGen>
        <tipl.version>1.0-SNAPSHOT</tipl.version>
        <!-- NB: Specify formatting of the maven.build.timestamp property. -->
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>
        
        <!-- Don't let your Mac use a crazy non-standard encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    <repositories>
        <!-- Force imagej repsository for imageio/jai -->

        <repository>
            <id>imagej.public</id>
            <url>http://maven.imagej.net/content/groups/public</url>
        </repository>

        <repository>
            <id>maven-repo</id>
            <!-- This should be at top, it makes maven try the central repo first and then others and hence faster dep resolution -->
            <name>Maven Repository</name>
            <!-- HTTPS is unavailable for Maven Central -->
            <url>http://repo.maven.apache.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>apache-repo</id>
            <name>Apache Repository</name>
            <url>https://repository.apache.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>spring-releases</id>
            <name>Spring Release Repository</name>
            <url>http://repo.spring.io/libs-release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>

    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>com.typesafe.genjavadoc</groupId>
            <artifactId>genjavadoc-plugin_${scala.version}</artifactId>
            <version>0.8</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                   <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <maxmem>1024m</maxmem>
                    <fork>true</fork>
                </configuration>
            </plugin>
            </plugins>
        </pluginManagement>
        <outputDirectory>target/classes</outputDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>

                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>

                    </execution>

                    <!--   maybe we need to compile this -->
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.compile.version}</scalaVersion>
                    <source>${java.version}</source>
                    <target>${java.version}</target>

                    <encoding>UTF-8</encoding>
                    <!--  <recompileMode>incremental</recompileMode>
                      <useZincServer>true</useZincServer> -->
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>-language:postfixOps</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>${java.memory.min}</jvmArg>
                        <jvmArg>${java.memory.max}</jvmArg>
                        <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
                        <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- Make true to use scalatest instead 
                    <skipTests>true</skipTests>
                    -->
                    <parallel>classes</parallel>
                    <threadCount>2</threadCount>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- This is not needed until everything else runs smoothly -->
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>0.4.0</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${basedir}/scalastyle-config.xml</configLocation>
                    <outputFile>scalastyle-output.xml</outputFile>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Build Number Maven plugin -
              http://mojo.codehaus.org/buildnumber-maven-plugin/
              This plugin embeds a build number in the JAR manifest. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.3</version>
                <!-- Record SCM revision in manifest. -->
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                </configuration>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>

                            <execution>
                                <id>scala-compile-first</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>

                            </execution>

                            <!--   maybe we need to compile this -->
                           <execution>
                               <id>scala-test-compile-first</id>
                               <phase>process-test-resources</phase>
                               <goals>
                                   <goal>testCompile</goal>
                               </goals>
                           </execution>

                            <execution>
                                <id>attach-scaladocs</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>doc-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <scalaVersion>${scala.compile.version}</scalaVersion>
                            <source>${java.version}</source>
                            <target>${java.version}</target>

                            <encoding>UTF-8</encoding>
                            <!--  <recompileMode>incremental</recompileMode>
                              <useZincServer>true</useZincServer> -->
                            <args>
                                <arg>-unchecked</arg>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                                <arg>-language:postfixOps</arg>
                            </args>
                            <jvmArgs>
                                <jvmArg>${java.memory.min}</jvmArg>
                                <jvmArg>${java.memory.max}</jvmArg>
                                <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
                                <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
                            </jvmArgs>
                            <javacArgs>
                                <javacArg>-source</javacArg>
                                <javacArg>${java.version}</javacArg>
                                <javacArg>-target</javacArg>
                                <javacArg>${java.version}</javacArg>
                            </javacArgs>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.1</version>
                        <configuration>
                            <skip>${javadoc.skip}</skip>
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <profile>
            <id>javadoc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>doc</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <args>
                                <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg>
                            </args>
                            <compilerPlugins>
                                <compilerPlugin>
                                    <groupId>com.typesafe.genjavadoc</groupId>
                                    <artifactId>genjavadoc-plugin_${scala.compile.version}</artifactId>
                                    <version>0.8</version>
                                </compilerPlugin>
                            </compilerPlugins>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/genjavadoc</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.1</version>
                        <configuration>
                            <skip>${javadoc.skip}</skip>
                            <minmemory>64m</minmemory>
                            <maxmemory>2g</maxmemory>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <detectLinks>true</detectLinks>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                            <!-- put all the javadocs together into a single folder -->
                            <execution>
                                <id>aggregate</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                </plugins>
            </build>
        </profile>
    </profiles>
</project>
