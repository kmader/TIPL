<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.imagej</groupId>
        <artifactId>pom-imagej</artifactId>
        <version>5.0</version>
        <relativePath />
    </parent>

    <groupId>fourquant</groupId>
    <artifactId>spark-imageio</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Apache Spark ImageIO Integration</name>
    <description>Integrating ImageIO and tile reading into spark</description>

    <properties>
        <spio.version>1.0-SNAPSHOT</spio.version>
        <tipl.version>1.0-SNAPSHOT</tipl.version>

        <spark.version>2.0.0-SNAPSHOT</spark.version>
        <nd4j.version>0.0.3.5.5.2</nd4j.version>
        <geotiff-jai.version>0.0</geotiff-jai.version>

        <scala.major>2.11</scala.major>
        <scala.compile.version>2.11.8</scala.compile.version>
        <scala.version>2.11.8</scala.version>
        <java.version>1.7</java.version>

        <scala.binary.version>2.11</scala.binary.version>
        <scala.macros.version>2.0.1</scala.macros.version>


        <javadoc.skip>false</javadoc.skip>
        <java.memory.min>-Xms1G</java.memory.min>
        <java.memory.max>-Xmx2G</java.memory.max>

        <PermGen>256m</PermGen>
        <MaxPermGen>1024m</MaxPermGen>

        <!-- NB: Specify formatting of the maven.build.timestamp property. -->
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>

        <!-- Don't let your Mac use a crazy non-standard encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>


    <dependencies>
        <!-- for tiff imageio support and other geo-formats, doesn't load nasa images
        <dependency>
            <groupId>org.geotoolkit</groupId>
            <artifactId>geotk-coverageio</artifactId>
            <version>3.21</version>
        </dependency>-->

        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai-core</artifactId>
            <version>1.1.3</version>
        </dependency>

        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_imageio</artifactId>
            <version>1.1</version>
        </dependency>


        <dependency>
            <groupId>com.sun.media</groupId>
            <artifactId>jai-codec</artifactId>
            <version>1.1.3</version>
        </dependency>

        <!-- for scifio support -->
        <dependency>
            <groupId>fourquant</groupId>
            <artifactId>spark-scifio</artifactId>
            <version>${spio.version}</version>
        </dependency>


        <!-- geotiff not needed at the moment
        <dependency>
            <groupId>geotiff</groupId>
            <artifactId>geotiff-jai</artifactId>
            <version>${geotiff-jai.version}</version>
        </dependency>
-->
        <!-- for numerics and gpu code -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-jblas</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>



        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!-- for breeze and mllib tools -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <!-- for sql and custom defined types tools -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>


        <!-- spark testing dependencies -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>2.2.6</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <developers>
        <developer>
            <id>ksmader</id>
            <name>Kevin Mader</name>
            <email>kevin.mader@gmail.com</email>
            <url />
            <organization>4Quant AG</organization>
            <organizationUrl>http://www.4quant.com/</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <repositories>
        <repository>
            <id>imagej.public</id>
            <url>http://maven.imagej.net/content/groups/public</url>
        </repository>

         <repository>
            <!-- Not needed for "*-geoapi-3.0" versions -->
            <id>geotoolkit</id>
            <name>Geotk repository</name>
            <url>http://maven.geotoolkit.org</url>
        </repository>

        <repository>
            <id>osgeo</id>
            <name>Open Source Geospatial Foundation Repository</name>
            <url>http://download.osgeo.org/webdav/geotools/</url>
        </repository>

        <repository>
            <id>apache-repo</id>
            <name>Apache Repository</name>
            <url>https://repository.apache.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>asf-snapshot</id>
            <url>http://repository.apache.org/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <maxmem>1024m</maxmem>
                        <fork>true</fork>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                </plugin>

                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <outputDirectory>target/classes</outputDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>

                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>

                    </execution>

                    <!--   maybe we need to compile this -->
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.compile.version}</scalaVersion>
                    <source>${java.version}</source>
                    <target>${java.version}</target>

                    <encoding>UTF-8</encoding>
                    <!--  <recompileMode>incremental</recompileMode>
                      <useZincServer>true</useZincServer> -->
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>-language:postfixOps</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>${java.memory.min}</jvmArg>
                        <jvmArg>${java.memory.max}</jvmArg>
                        <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
                        <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.1</version>
                <configuration>
                    <skip>${javadoc.skip}</skip>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>

                <version>1.0-RC2</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>${project.build.directory}/SparkTestSuite.txt</filereports>
                    <argLine>-Xmx3g -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=512m</argLine>
                    <stderr/>
                    <environmentVariables>
                        <SPARK_TESTING>1</SPARK_TESTING>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- Make true to use scalatest instead
                    <skipTests>true</skipTests>
                    -->

                    <parallel>classes</parallel>
                    <threadCount>2</threadCount>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Build Number Maven plugin -
              http://mojo.codehaus.org/buildnumber-maven-plugin/
              This plugin embeds a build number in the JAR manifest. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.3</version>
                <!-- Record SCM revision in manifest. -->
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                </configuration>
            </plugin>


        </plugins>
    </build>
</project>
